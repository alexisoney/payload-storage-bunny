{"version":3,"sources":["../src/staticHandler.ts"],"sourcesContent":["import type { StaticHandler } from '@payloadcms/plugin-cloud-storage/types'\nimport type { CollectionConfig } from 'payload'\n\nimport { HTTPError } from 'ky'\n\nimport type { BunnyAdapterOptions } from './types.js'\n\nimport { storageStaticHandler } from './staticHandlerStorage.js'\nimport { streamStaticHandler } from './staticHandlerStream.js'\nimport { getVideoFromDoc } from './utils.js'\n\ntype Args = { collection: CollectionConfig; prefix?: string } & BunnyAdapterOptions\n\nexport const getStaticHandler = ({\n  collection,\n  prefix = '',\n  storage,\n  stream,\n}: Args): StaticHandler => {\n  return async (req, data) => {\n    try {\n      const { doc, params: { filename } } = data\n\n      if (stream) {\n        if (filename && filename.startsWith('bunny:stream:')) {\n          const parts = filename.split(':')\n          if (parts.length === 4 && parts[3] === 'thumbnail.jpg') {\n            const videoId = parts[2]\n\n            const thumbnailUrl = `https://${stream.hostname}/${videoId}/thumbnail.jpg`\n\n            try {\n              const response = await fetch(thumbnailUrl)\n              if (!response.ok) {\n                return new Response(`Thumbnail not found: ${response.status}`, { status: response.status })\n              }\n\n              const headers = new Headers()\n              response.headers.forEach((value, key) => {\n                headers.set(key, value)\n              })\n\n              return new Response(response.body, {\n                headers,\n                status: response.status,\n              })\n            } catch (error) {\n              req.payload.logger.error({\n                error,\n                thumbnailUrl,\n              })\n              return new Response('Error fetching thumbnail', { status: 500 })\n            }\n          }\n        }\n\n        let video = getVideoFromDoc(doc, filename)\n\n        if (!video) {\n          const result = await req.payload.find({\n            collection: collection.slug,\n            limit: 1,\n            where: {\n              bunnyVideoId: {\n                exists: true,\n              },\n              filename: {\n                equals: filename,\n              },\n            },\n          })\n\n          if (result.docs.length > 0) {\n            video = getVideoFromDoc(result.docs[0], filename)\n          }\n        }\n\n        if (video && video.videoId) {\n          return await streamStaticHandler(req, stream, {\n            collection: collection.slug,\n            docId: video.docId,\n            videoId: video.videoId,\n            videoMeta: video.videoMeta,\n          })\n        }\n      }\n\n      return await storageStaticHandler(req, data, filename, storage, prefix)\n    } catch (err) {\n      if (err instanceof HTTPError) {\n        const errorResponse = await err.response.text()\n\n        req.payload.logger.error({\n          error: {\n            response: errorResponse,\n            status: err.response.status,\n            statusText: err.response.statusText,\n          },\n          file: { name: data.params.filename },\n          storage: storage.zoneName,\n        })\n\n        return new Response(null, {\n          status: err.response.status === 404 ? 404 : 500,\n          statusText: err.response.status === 404 ? 'Not Found' : 'Internal Server Error',\n        })\n      }\n\n      req.payload.logger.error({\n        error: err,\n        file: { name: data.params.filename },\n        storage: storage.zoneName,\n      })\n\n      return new Response('Internal Server Error', { status: 500 })\n    }\n  }\n}"],"names":["HTTPError","storageStaticHandler","streamStaticHandler","getVideoFromDoc","getStaticHandler","collection","prefix","storage","stream","req","data","doc","params","filename","startsWith","parts","split","length","videoId","thumbnailUrl","hostname","response","fetch","ok","Response","status","headers","Headers","forEach","value","key","set","body","error","payload","logger","video","result","find","slug","limit","where","bunnyVideoId","exists","equals","docs","docId","videoMeta","err","errorResponse","text","statusText","file","name","zoneName"],"mappings":"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"}