{"version":3,"sources":["../src/utils.ts"],"sourcesContent":["import type { PayloadRequest, TypeWithID } from 'payload'\n\nimport ky, { HTTPError } from 'ky'\n\nimport type { BunnyAdapterOptions, BunnyStorageOptions, BunnyVideoMeta } from './types.js'\n\nexport const getStorageUrl = (region: string | undefined) => {\n  if (!region) {\n    return 'storage.bunnycdn.com'\n  }\n\n  return `${region}.storage.bunnycdn.com`\n}\n\nexport const getVideoFromDoc = (doc: TypeWithID | undefined, filename: string) => {\n  if (\n    doc &&\n    typeof doc === 'object' &&\n    'id' in doc &&\n    'filename' in doc &&\n    doc.filename === filename &&\n    'bunnyVideoId' in doc &&\n    typeof doc.bunnyVideoId === 'string'\n  ) {\n    return {\n      docId: doc.id,\n      videoId: doc.bunnyVideoId,\n      videoMeta: ('bunnyVideoMeta' in doc ? doc.bunnyVideoMeta : null) as BunnyVideoMeta | null,\n    }\n  }\n\n  return undefined\n}\n\nexport const isImage = (mimeType: string) => mimeType.startsWith('image/')\nexport const isVideo = (mimeType: string) => mimeType.startsWith('video/')\n\nexport const validateOptions = (\n  storageOptions: BunnyStorageOptions,\n): void => {\n  const errors: string[] = []\n\n  if (storageOptions.options.storage.hostname.includes('storage.bunnycdn.com')) {\n    errors.push('Hostname in storage settings cannot contain \"storage.bunnycdn.com\"')\n  }\n\n  if (storageOptions.options.purge) {\n    const { purge } = storageOptions.options\n\n    if (purge.enabled && !purge.apiKey) {\n      errors.push('When purge is enabled, an API key must be provided')\n    }\n  }\n\n  if (storageOptions.options.stream) {\n    const collectionsWithAccessControl = Object.entries(storageOptions.collections).filter(([_, collection]) =>\n      typeof collection === 'object' &&\n      collection.disablePayloadAccessControl !== true,\n    )\n\n    const mp4FallbackEnabled = storageOptions.options.stream.mp4Fallback?.enabled ||\n      !!storageOptions.options.stream.mp4FallbackQuality\n\n    if (collectionsWithAccessControl.length > 0 && !mp4FallbackEnabled) {\n      const collectionNames = collectionsWithAccessControl.map(([key]) => key).join(', ')\n      errors.push(\n        `Collections [${collectionNames}] have disablePayloadAccessControl disabled, mp4Fallback must be enabled`,\n      )\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new Error(\n      `Bunny Storage configuration error: ${errors.join('; ')}. Please refer to the documentation: https://github.com/maximseshuk/payload-storage-bunny`,\n    )\n  }\n}\n\nexport const purgeBunnyCache = async (\n  url: string,\n  options: BunnyAdapterOptions['purge'],\n  req?: PayloadRequest,\n): Promise<boolean> => {\n  if (!options || !options.enabled) {\n    return false\n  }\n\n  try {\n    await ky.post('https://api.bunny.net/purge', {\n      headers: {\n        AccessKey: options.apiKey,\n      },\n      searchParams: {\n        async: options.async || false,\n        url,\n      },\n      timeout: 30000,\n    })\n\n    return true\n  } catch (err) {\n    if (req) {\n      if (err instanceof HTTPError) {\n        const errorResponse = await err.response.text()\n\n        req.payload.logger.error({\n          action: 'Cache purge',\n          error: {\n            response: errorResponse,\n            status: err.response.status,\n            statusText: err.response.statusText,\n          },\n          url,\n        })\n      } else {\n        req.payload.logger.error({\n          action: 'Cache purge',\n          error: err,\n          url,\n        })\n      }\n    }\n\n    return false\n  }\n}"],"names":["ky","HTTPError","getStorageUrl","region","getVideoFromDoc","doc","filename","bunnyVideoId","docId","id","videoId","videoMeta","bunnyVideoMeta","undefined","isImage","mimeType","startsWith","isVideo","validateOptions","storageOptions","errors","options","storage","hostname","includes","push","purge","enabled","apiKey","stream","collectionsWithAccessControl","Object","entries","collections","filter","_","collection","disablePayloadAccessControl","mp4FallbackEnabled","mp4Fallback","mp4FallbackQuality","length","collectionNames","map","key","join","Error","purgeBunnyCache","url","req","post","headers","AccessKey","searchParams","async","timeout","err","errorResponse","response","text","payload","logger","error","action","status","statusText"],"mappings":"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"}