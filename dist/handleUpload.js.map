{"version":3,"sources":["../src/handleUpload.ts"],"sourcesContent":["import type { HandleUpload } from '@payloadcms/plugin-cloud-storage/types'\n\nimport ky, { HTTPError } from 'ky'\nimport { posix } from 'node:path'\nimport { APIError } from 'payload'\n\nimport type { BunnyAdapterOptions } from './types.js'\n\nimport { getGenerateURL } from './generateURL.js'\nimport { getStorageUrl, purgeBunnyCache } from './utils.js'\n\ntype Args = { prefix?: string } & BunnyAdapterOptions\n\nexport const getHandleUpload = ({ prefix, purge, storage, stream }: Args): HandleUpload => {\n  return async ({ collection, data, file, req }) => {\n    data.url = null\n    data.thumbnailURL = null\n\n    try {\n      const fileName = file.filename\n      const filePath = posix.join(prefix || '', fileName)\n      const isVideoFile = file.mimeType.startsWith('video/')\n\n      if (stream && isVideoFile) {\n        const { guid } = await ky\n          .post<{ guid: string }>(`https://video.bunnycdn.com/library/${stream.libraryId}/videos`, {\n            headers: {\n              accept: 'application/json',\n              AccessKey: stream.apiKey,\n              'content-type': 'application/json',\n            },\n            json: { thumbnailTime: stream.thumbnailTime, title: fileName },\n            timeout: 120000,\n          })\n          .json()\n\n        await ky.put(`https://video.bunnycdn.com/library/${stream.libraryId}/videos/${guid}`, {\n          body: file.buffer,\n          headers: {\n            accept: 'application/json',\n            AccessKey: stream.apiKey,\n          },\n          timeout: 120000,\n        })\n\n        data.filename = fileName\n        data.bunnyVideoId = guid\n      } else {\n        await ky.put(`https://${getStorageUrl(storage.region)}/${storage.zoneName}/${filePath}`, {\n          body: file.buffer,\n          headers: {\n            accept: 'application/json',\n            AccessKey: storage.apiKey,\n            'content-type': file.mimeType,\n          },\n          timeout: 120000,\n        })\n\n        data.bunnyVideoId = null\n\n        if (purge && purge.enabled) {\n          const url = await getGenerateURL({ storage, stream })({ collection, data, filename: fileName, prefix: prefix || '' })\n          await purgeBunnyCache(url, purge, req)\n        }\n      }\n\n      return data\n    } catch (err: unknown) {\n      if (err instanceof HTTPError) {\n        const errorResponse = await err.response.text()\n\n        req.payload.logger.error({\n          error: {\n            response: errorResponse,\n            status: err.response.status,\n            statusText: err.response.statusText,\n          },\n          file: {\n            name: file.filename,\n            type: file.mimeType,\n            size: file.filesize,\n          },\n          storage: storage.zoneName,\n        })\n      } else {\n        req.payload.logger.error({\n          error: err,\n          file: {\n            name: file.filename,\n            type: file.mimeType,\n            size: file.filesize,\n          },\n          storage: storage.zoneName,\n        })\n      }\n\n      throw new APIError(`Error uploading file: ${file.filename}.`, 500)\n    }\n  }\n}"],"names":["ky","HTTPError","posix","APIError","getGenerateURL","getStorageUrl","purgeBunnyCache","getHandleUpload","prefix","purge","storage","stream","collection","data","file","req","url","thumbnailURL","fileName","filename","filePath","join","isVideoFile","mimeType","startsWith","guid","post","libraryId","headers","accept","AccessKey","apiKey","json","thumbnailTime","title","timeout","put","body","buffer","bunnyVideoId","region","zoneName","enabled","err","errorResponse","response","text","payload","logger","error","status","statusText","name","type","size","filesize"],"mappings":"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"}